<?php

/**
 * ProductCategories
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProductCategories extends BaseProductCategories {
	public static function getById($id = 0) {
		return Doctrine_Query::create ()->from ( __CLASS__ )->where ( 'id=?' )->execute ( array (
				$id 
		) )->getFirst ();
	}
	public static function getByNamePlain($id = 0) {
		return Doctrine_Query::create ()->from ( __CLASS__ )->where ( 'title_plain=?' )->execute ( array (
				$id 
		) )->getFirst ();
	}
	public static function getAll($Condition = array(), $parent_id = 0) {
		$NewsCategories = Doctrine_Query::create ()->from ( __CLASS__ )->where ( 'product_categories_id=?', $parent_id )->orderBy ( 'orders' );
		if (is_array ( $Condition ))
			foreach ( $Condition as $key => $item ) {
			
				$NewsCategories->addWhere ( $key, $item );
			}
			
		return $NewsCategories->execute ();
	}
	public static function getWithOutPage($Condition = array(), $limit = 0) {
		$ProductCates = Doctrine_Query::create ()->from ( __CLASS__ )->orderBy ( 'orders' );
		if (is_array ( $Condition ))
			foreach ( $Condition as $key => $item ) {
				$ProductCates->addWhere ( $key, $item );
			}
		return $ProductCates->execute ();
	}
	public static function getParentTree($category = 0, $categories_array = array ()) {
		$Category = Doctrine_Query::create ()->from ( __CLASS__ )->where ( 'id=?', $category )->execute ()->getFirst ();
		if ($Category) {
			$categories_array [$Category->id] = $Category->title;
			$categories_array = self::getParentTree ( $Category->product_categories_id, $categories_array );
		}
		return $categories_array;
	}
	
	public static function getParentTreeArrayKey($tree = array(), $Categories = array (), $id = '0') {
		if ($tree)
			foreach ( $tree as $a => $category ) {
				if ($category ['id'] == $id) {
					unset ( $tree [$a] );
					$Categories [$category ['id']] = $category;
					$Categories = self::getParentTreeArrayKey ( $tree, $Categories, $category ['product_categories_id'] );
				}
			}
		return $Categories;
	}
	
	public function getActiveChildren($cate) {
		$id = explode ( ',', $this->children_id );
		if (is_array ( $id ))
			return Doctrine_Query::create ()->from ( __CLASS__ )->whereIn ( 'id', $id )->addwhere ( 'status=?', 1 )->addWhere ( 'product_categories_id=?', $cate )->orderBy ( 'orders' )->execute ();
	}
	
	public function getLink() {
		return (($this->product_type_id == 1) ? 'tac-dung/' : 'san-pham/') . $this->title_plain . '.html';
	}
	
	public static function doFindRoot($id) {
		$Category = self::getById ( $id );
		if ($Category->product_categories_id != 0)
			return self::doFindRoot ( $Category->product_categories_id );
		return $Category->id;
	}
	
	public static function doUpdateChildrent($id) {
		$Category = self::getById ( $id );
		if ($Category) {
			if ($Category->product_categories_id != 0) {
				// ìm nhóm Root để update
				$root_id = self::doFindRoot ( $Category->product_categories_id );
				$Category = self::getById ( $root_id );
			} else
				$root_id = $id;
				
				//
			$Category->children_id = implode ( ',', self::_doUpdateChildrent ( $root_id, $root_id ) );
			
			$Category->root_id = $root_id;
			$Category->save ();
		}
	}
	
	private static function _doUpdateChildrent($id, $root_id) {
		$aChild = array ();
		$Categories = self::getAll ( $id );
		if ($Categories) {
			foreach ( $Categories as $Category ) {
				$aChild [] = $Category->id;
				$Category->root_id = $root_id;
				if ($aChildren = self::_doUpdateChildrent ( $Category->id, $root_id )) {
					$Category->children_id = implode ( ',', $aChildren );
					$aChild [] = $Category->children_id;
				} else
					$Category->children_id = '';
				$Category->save ();
			}
		}
		return $aChild;
	}
	
	public static function getTreeOption($categories_array = array (), $parent_id = '0', $indent = '') {
		$tree = self::getAll ( $parent_id )->toArray ();
		foreach ( $tree as $row ) {
			$categories_array [$row ['id']] = $indent . $row ['title'];
			$categories_array = self::getTreeOption ( $categories_array, $row ['id'], $indent . ' --' );
		}
		return $categories_array;
	}
	public function getThumbImage() {
		$file_path = '/uploads/productcate/' . $this->id . '/thumb.jpg';
		
		return $file_path;
	}
	
	public static function getOption($countries = array(), $condition = array()) {
		$Countries = self::getAll ( $condition );
		
		foreach ( $Countries as $Country ) {
			$countries [$Country->id] = $Country->title;
		}
		
		return $countries;
	}
	public static function getCategoriesMenu() {
		$AllCategories = ProductType::getWithOutPage ( array () );
		$menu = '';
		foreach ( $AllCategories as $category ) {
			$menu .= '<div class="items">';
			$Products = ProductCategories::getWithOutPage ( array (
					'product_type_id=?' => $category->id 
			) );
			
			if ($Products->count () > 0) {
				$menu .= '<p class="title-i">' . $category->name . '</p>';
				$menu .= '<ul class="navDropdown">';
				foreach ( $Products as $Product ) {
					$menu .= '<li><a href="' . $Product->getLink () . '">' . $Product->title . '</a></li>';
				}
				$menu .= '</ul>';
			}
			$menu .= '</div>';
		}
		return $menu;
	}

}